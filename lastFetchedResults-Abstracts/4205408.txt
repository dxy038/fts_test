Operating systems serve as executing platforms and resource managers for applications. With the development of more complex computer systems and applications, the required operating systems become complex too. But the proper management of such complex operating systems by human beings has shown to be impractical. Nowadays, self managing concepts provide the basis for developing appropriate mechanisms to handle complex systems with less human interventions. Although the implications of deploying self managing and autonomic attributes and concepts at the application levels have been studied, their deployment at system software level such as in operating systems have not been fully studied. Self managed applications may not enjoy the whole benefit of self management if the platform on which they run, specially its operating system, is not self managed. Given this requirement, this paper highlights the most experienced faults and anomalies of operating systems, and proposes a tiered operating system architecture and a corresponding self healing mechanism to show how self- managing can be realized at operating system level. The main objective has been to make the operating system resilient to operating system faults without restarting the operating system.
