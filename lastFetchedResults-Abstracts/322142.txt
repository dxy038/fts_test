Evolutionary algorithms, including evolutionary programming and evolution strategies, have often been applied to real-valued function optimization problems. These algorithms generally operate directly on the real values to be optimized, in contrast with genetic algorithms which usually operate on a separately coded transformation of the objective variables. Evolutionary algorithms often rely on a second-level optimization of strategy parameters, tunable variables that in part determine how each parent will generate offspring. Two alternative methods for performing this second-level optimization have been proposed and are compared across a series of function optimization tasks. The results appear to favor the approach offered originally in evolution strategies, although the applicability of the findings may be limited to the case where each parameter of a parent solution is perturbed independently of all others.
