Dynamic software reconfiguration is a useful tool to adapt and maintain software systems. In most approaches, the system has to be stopped while the reconfiguration is in progress. This is not suitable for real-time systems, even on small-embedded systems. Timing constraints must be met even while the system is reconfiguring. Our approach is based on the real-time middleware OSA+. Our main objective is to be able to reconfigure services during run-time, with a predictable and predefined blackout time (the time the systems does not react due to the reconfiguration). Three different approaches concerning the blocking or non-blocking state of a service are presented. These approaches can be used to realize a tradeoff between the reconfiguration time and the blackout time.
