Routing in road networks is an old problem with renewed interest. In this work, we focus on how to extend real timeliness to the routing problem. With the increasing availability of rich time dependent data in the form of current traffic, weather conditions etc. And methods to compute its impact on the traveling time in the given road segment, location based services are increasingly becoming more demanding. While many algorithms exist to speed up the traditional Dijkstra´s algorithm for computing shortest paths in static road networks, only few have shown applicability in the dynamic case adapting to traffic updates on the road network. We note that most algorithms either use history based modelling of road traffic to compute the traveling time, neglecting the real time updates or distributed algorithms are used which let the client decide which way to go based on its local view of the graph and updates relevant to it. We give example scenarios illustrating the shortcomings of both these approaches and identify the need for an approach which is able to handle real time updates and where route computation requires server involvement and global viewpoint. We model the routing problem into a real time job scheduling problem where jobs are the shortest path queries submitted by the users and deadlines are computed on the fly depending on the user characteristics (current location, speed group etc.). The framework is a proactive one, in the sense that if the system has knowledge of updates relevant to its users, the results are communicated back to the user without them specifically asking for it. This is done by sending revised route to the user before user takes the next turn on the pre-specified path. Potentially any routing algorithm that is capable of dealing with real time network updates can be used to compute shortest path jobs in our framework, we demonstrate results with Dijkstra´s algorithm. We also show that using the graph characteristics and by doing so- e precomputation, it can be predicted that which algorithm from our library could result in a faster response for a particular query. We show results for Dijkstra´s algorithm and it´s bidirectional variant for this observation.
