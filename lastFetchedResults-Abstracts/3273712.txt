A continuous (1|1)-centroid problem with endogenous demand is considered. The objective is to maximize the profit obtained by a chain (the leader) knowing that a competitor (the follower) will react by locating another single facility after the leader locates its own facility. Contrary to what is commonly done in literature, it is assumed that the demand is endogenous, namely, it varies depending on the distances to and on the quality of the facilities. This assumption increases the complexity of the problem and, therefore, the computational effort needed to solve it. A subpopulation based evolutionary algorithm called TLUEGO was recently proposed to cope with this hard-to-solve global optimization problem. However, it requires high computational effort, even to manage small-size problems, despite the use of a ´fuse´ process aimed at reducing the size of the population. This is mainly due to the high cost of evaluating the leader´s objective function, which requires the resolution of another hard-to-solve optimization problem, namely, the follower´s problem. In this work, three parallelizations of TLUEGO are proposed, which not only allow us to obtain the solution faster, but also to solve larger instances. In particular, a distributed memory programming algorithm (suitable for multicomputers), a shared memory programming algorithm (suitable for multiprocessors, as most of today´s PCs are) and a hybrid of the two previous algorithms (suitable for clusters) are proposed. The computational studies show that the three parallelizations are efficient. Furthermore, they allow to obtain better results than the sequential algorithm, since thanks to the use of the new resources, the ´fuse´ process employed by the sequential algorithm can be omitted.
