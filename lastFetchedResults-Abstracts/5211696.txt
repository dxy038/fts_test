Software component reuse is the key to significant gains in software productivity. Language-oriented reusability is a process of utilising language features effectively. Reuse guidelines should represent the characteristics of reusable components. Earlier works on reuse guidelines have concentrated mainly on managerial problems and general design issues. This paper identifies, in detail, AdaÂ´s support for various approaches to component reuse such as building blocks, object-based, parameterisation, and genericity. These investigations are integrated into a set of guidelines which provide objective detailed advice on how to construct reusable components. These guidelines are partially automated by a prototype tool called ARA (The Ada Reuse Assessor) which generates reusable Ada components and provides reuse advice and analysis
