The objective of this work was to create a extensible graphical user interface (GUI) using Python and Tkinter for an image processing library, IPL98, which is written in C/C++. The decision was taken to use Python in order to gain the advantages of rapid development associated with using a scripting language. Unfortunately, the productivity gains that were made by using simple Python scripting for generating the GUI (rather than a more complex C++ framework) were offset by the difficulties encountered when trying to generate Python bindings for the IPL98 library. The solution adopted was to wrap individual C++ functions packaging chunks of IPL98 functionality for importing into Python. This solution is suboptimal in that there is too much of a division between the user interface and the application logic with the result that the GUI is unable to access image data that is in memory. To resolve this problem, future work will focus on wrapping the IPL98 classes directly concerned with image storage.
