For multilayered plated and shell structures the formulation of the optimization problem is strongly dependant on the definition of the design variables. Therefore, the first part of the work is devoted to the definition of design variables and the forms of objective functions. Those design variables define stacking sequences of structures have discrete fiber orientations 0°, ±45°, 90° and a finite number of key points that are required in the evaluation of the curve Γ characterizing an external boundary of the structure or a structural shape understood in the sense of a structural geometry representing a shell/plate mid-surface or thickness distribution of structures. For the curve definition we have adopted one dimensional B-splines. Each curve is formed by an assembly of subsegments passing through certain key points. The positions of key points are randomly generated so that in the generation process it is possible to fulfill the required set of equality or inequality constraints. It is necessary to emphasize that the proposed method is very general and can be applicable to a very broad class of optimization problems. The generality of the approach is confirmed by the proof of the direct equivalence and mapping between discrete fiber orientations and continuous angle ply orientations. The evolution strategy is proposed herein as the optimization algorithm. Similarly as classical ones (e.g. ACO, SS, PS or ISM) it combines all features and advantages of evolution algorithms. It is worth to note that in the evolution strategy the number of children produced in one generation is not limited and it is not necessary to conduct mutation operations as in genetic algorithms. It simplifies significantly the effectiveness of numerical procedures. Then, two numerical examples have been solved to demonstrate the effectiveness of the proposed formulations and the optimization algorithm. They deal with thickness and stacking sequence optimization problems for circular cylindrical shells subjected to various dynamic and static constraints, respectively.
