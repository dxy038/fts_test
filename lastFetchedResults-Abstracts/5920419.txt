The problem of mapping a task that is composed of interacting modules onto a hypercube multicomputer is formulated and solved by minimizing an objective function called the communication traffic. The objective function allows module assignments to be found with the usual straightforward combinatorial optimization techniques. The problem of finding an assignment that minimizes the communication traffic is proved to be NP-hard, so a standard state-space search algorithm as well as other heuristic algorithms are used to find optimal/suboptimal solutions. The relative performances of various algorithms are evaluated using simulations. The assignments obtained from these algorithms are evaluated using an event-driven simulator to learn how they perform in real-world execution environments
