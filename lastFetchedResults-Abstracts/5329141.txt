The basic intuition underlying this work is that experienced designers are able to point out problematic patterns in the design structure of an artifact and questionable events and trends in its evolution. We believe that the very process of recognizing and reflecting upon specific interesting designs and design-evolution examples may help software developers acquire valuable design experience to complement their textbook knowledge. The objective of this work is to further develop JDEvAn, so that it becomes a software design-evolution mentor that can advise developers on a desired course of software maintenance and evolution, based on its assessment of the system´s current design and the design rationale implicit in the system´s evolution history. JDEvAn focuses on the logical view of object-oriented Java systems as the first design artifact to analyze.
