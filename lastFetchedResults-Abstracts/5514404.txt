This paper shows how to use the state machines and systematic approaches for modeling software to help improve the consistency of the model, verification and validation of an analysis area through a Domain Specific Language (Domain Specifical Language - DSL), in addition to the refinement of the business process (since the mapping of domain analysis and process of business development). The main objective of this approach is how to obtain systematically a DSL from a domain analysis that may be using the system code compliance to all Business Rules outlined, and no documents and settings very complex. Many problems of Systems Computer Software Computer Software Systems-CSS) are derived from a specification with and without its behavior defined. To resolve these problems, business rules will be treated since its formalization to its construction and testing. In this context, Petri Nets provide a graphical description technique easy to understand and, closed to state-transition diagrams. Parallelism, concurrency and sincronization are easy to model in a Petri net. Add to this, many techniques and tools (in software) are available for the analysis of Petri nets. However, too much formalization can bring problems to software development and the time and cost grow. Furthermore it is suggested that formal methods have fewer errors than the heuristic methods.
