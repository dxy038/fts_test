We highlight how the vertical cavity surface emitting laser, or VCSEL, empowers interprocessor communication for grids of spaceborn computers. To put a face on how VCSELs benefit spaceflight multi-processors, we quantify the scalability of point-to-point optical channels, implemented to achieve fault tolerance and connectivity tuned from sparse to dense. VCSELs can free designers from the tyranny of planar layouts, reduce mass, and realize multi-processor architectures previously considered infeasible. We illustrate with a scalable family for grid computing whose fault tolerance can be tuned from a worst-case constant, to a probabilistic constant fraction, to a worst-case constant fraction of all processors. We synopsize the device integrity and channel robustness of VCSELs, particularly in the presence of low-Earth orbit radiation. We conclude by describing multi-processor prototypes that would enable objective, experimental comparison of alternative ways to deploy VCSELs: i) fiber waveguides; ii) photonics crossbars and backplanes; iii) direct, processor-to-processor beams. Relating historical and programmatic context to what we can (and should) build, this is a survey paper targeting an audience versed in avionics, optical communications, or computer interconnection technologies. Two companion contributions appear in these conference proceedings: "multi-processors by the numbers" (LaForge, 2006) addresses a general audience with an overview of our work, unfolds how feasible regions govern multi-processor design and operation, and elaborates the grid computing application mentioned in the abstract above. Written for engineers, computer scientists, or applied mathematicians with a rigorous background in dependable computing, "spaceflight multi-processors with fault tolerance and connectivity tuned from sparse to dense" crystallizes the case for software that embodies the mathematics of connectivity. Exemplifying fresh results for the latter, (LaForge, 2006) introdu- - ces a new, efficient algorithm for recognizing and labeling Hamming topologies
