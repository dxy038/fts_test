Whenever there is more work to do than resources to overcome it, engineers usually tend to devise some kind of prioritization that ensures that effort is applied to the most important tasks. This is what Barry Boehm called the "value-based" approach. We propose a value-based methodology that prioritizes software artifacts taking into account the frequency of use. The main idea is to provide to maintainers with a "partial view" of the system containing only the code corresponding with the functionality that is really used by users, and thus to "ignore" the code which is not use. The objective of our proposal is to minimize the maintenance effort needed to maintain large systems, by means of reducing the size and complexity of such software. This process that we called "software reduction" is explained in detail in this paper.
