A description is given of a prototype persistent-object system, called DOOM, (Data-Oriented Object Manager), which was designed to explore issues in language-level persistence for object-oriented application platforms. In its first iteration, the language aspects of persistence were investigated, and a design which allowed the exchange of persistent objects between Common Objects (Common Lisp extension) and Objective-C/sup 2/ (C extension) was implemented. The system features a tight coupling between the languages; run-time support and a relational storage manager. In a second iteration, the coupling between the database and the language was loosened, and more characteristics of the database were exposed to the applications programmer. The language extensions introduced into CommonObject and Objective-C/sup 2/ to support persistence are discussed, and the architectures of DOOM-I and DOOM-II are described. Some persistent-object systems similar to DOOM that have appeared in the recent literature are briefly reviewed, and DOOM is examined in the light of two of the other systems.&lt;<etx>&gt;</etx>
