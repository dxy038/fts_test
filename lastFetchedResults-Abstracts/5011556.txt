A tailbiting trellis for a code is a trellis with multiple starting and multiple ending states. Each starting state corresponds to a unique ending state and they are the same state. A path in a tailbiting trellis represents a valid codeword if and only if it starts from a state and ends at the same state. Such a path is called a tailbiting path. In this paper, two new iterative algorithms for decoding codes based on their tailbiting trellises are presented, one is unidirectional and the other is bidirectional. Both algorithms are computationally efficient and achieves virtually optimum error performance with a small number of decoding iterations
