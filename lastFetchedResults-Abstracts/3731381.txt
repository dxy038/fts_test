Two models are presented for conducting simple searches under the assumption that the tasks within the search tree are complex and may be I/O bound. The objective is to achieve the minimum expected time to completion. The simpler model assumes that the search paths are disjoint. The optimal policy in the general case is to run the tasks with the highest ratio of success probability per cycle expended. If one task is sufficiently small compared to the other task that it completes first in all schedules, the optimum scheduling policy is based on a comparison of ratios of the form <e1>p</e1>/<e1>r</e1>, where <e1>p</e1> is the probability of success and <e1>r</e1> is the marginal processing rate of a task. For the second model the search paths are independent, and the success or failure on one path is not related to the success or failure on any other path. This model generally gives priority to the task that has the highest probability per marginal execution rate. For both models, the results reported hold only for a search with two paths. For the problem of scheduling <e1>N</e1> tasks the policy of giving priority to tasks according to descending values of probability of success over cost is generally a good idea, although it does not necessarily yield an optimum schedule
