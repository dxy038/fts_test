The objective of this work is the application of propositional calculus to validate the consistency of the interrelationship between software objects. A software object is defined as an entity or element which has a name and a role, achieves an objective, and can be identified at the formative stages of eliciting requirements specifications. A relation is also an entity that binds two software objects and conveys an association between the object-pair. Such a binding produces logical propositions or arguments for reasoning about the interrelationships of the objects. The authors narrow the view of requirements specifications to a collection of several, perhaps hundreds, of propositions or arguments
