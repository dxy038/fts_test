In this paper, we focus on the throughput-constrained parallel execution of synchronous data flow graphs. This paper assumes static mapping and dynamic scheduling of nodes in contrast to the related work that assumes static scheduling. Since the scheduling order in dynamic scheduling is dependent on the priority assignment, three priority assignment methods are proposed and compared. If all task execution times do not vary at run-time, priority assignment is another way of storing a static schedule. We propose a static mapping technique to minimize the resource overhead considering both the processor cost and the total buffer size on all arcs under a given throughput constraint. Since the problem is NP-complete, a multi objective evolutionary algorithm is exploited to discover the mapping that minimizes the processor cost and the buffer requirement simultaneously. The experimental results show that the proposed technique requires fewer resources or higher average throughput than the previous approaches.
