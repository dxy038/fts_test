Compiler-controlled speculation has been shown to be effective in increasing instruction level parallelism (ILP) found in non-numeric programs. However, it is not clear the extent to which speculatively scheduled code may affect the instruction and data caches. In particular, the amount of time spent resolving cache misses may be significant enough to prevent the more aggressive speculation models from attaining their best potential performance results. The objective of this paper is to quantify these effects using aggressive speculation models
