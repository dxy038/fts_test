TodayÂ´s upper-class passenger cars have various interconnected electronic devices. Each device performs complex functions, enabled by software that can be stored in a flash memory. Of these, the devices in the multimedia and infotainment domain contain by far the most software with a size in the order of one Gbyte. In this domain, the devices are the performance bottlenecks, not the communication systems. Throughout the vehicle life cycle, parts of the software have to be frequently updated during maintenance. Today, the software of the devices is updated in a consecutive manner. Due to performance bottlenecks caused by the affected devices, the update can take a long time that leads to high costs. Therefore, the objective is to reduce the total update time by a higher utilization of the common bus resource. In this paper, we introduce and investigate algorithms that update the software of multiple devices simultaneously and evaluate the efficiency of these algorithms. We focus on scheduling algorithms on the Application layer and the logical link control (LLC) layer and model the update process by means of Petri nets. Our studies show that it is most promising to combine a simple scheduling algorithm on the Application layer with Round Robin on the LLC layer.
