Maintaining consistency between the architecture of a component based software system and the components available in the component repository is a persistent concern in component-based software engineering . Nowadays in the software development practice, the percentage of time and effort allocated to this task is still too small to avoid bugs, which are late to discover and hard to fix. Various methodologies exist to annotate component selection models with data related to verification and validation, and to translate the annotated models into component performance. In any component selection method, it is unrealistic to expect a perfect match between components needed and components available. A group of components that compose a system may have overlaps and gaps in required functionality. A gap represents a lack of functionality; an overlap can cause a confusion of responsibility and degrade nonfunctional properties like size and performance. In the series of these technical unsolved issues, this proposed paper would be an attempt to throw light which on the one of the major issue of component based software engineering is concerned with the ldquocomponent selectionrdquo. Recently a genetic algorithms based approach is used for component selection to minimize the gap between components needed and components available. A relevant objective is now at hand in this direction, that is to make these methodologies acceptable from the software engineering community. Therefore, in this paper we develop genetic algorithms based approach for selection component.
