Evolutionary computation plays a principal role in intelligent design automation. Evolutionary approaches have discovered novel and patentable designs. Nonetheless, evolutionary techniques may lead to designs that lack robustness. This critical issue is strongly connected to the concept of evolvability. In nature, highly evolvable species tend to be found in rapidly changing environments. Such species can be considered robust against environmental changes. Consequently, to create robust engineering designs it could be beneficial to use variable, rather than fixed, fitness criteria. In this paper, we study the performance of an evolutionary programming algorithm with periodical switching between goals, which are selected randomly from a set of related goals. It is shown by a dual-objective filter optimization example that altering goals may improve evolvability to a fixed goal by enhancing the dynamics of solution population, and guiding the search to areas where improved solutions are likely to be found. Our reference algorithm with a single goal is able to find solutions with competitive fitness, but these solutions are results of premature convergence, because they are poorly evolvable. By using the same algorithm with switching goals, we can extend the productive search length considerably; both the fitness and robustness of such designs are improved.
