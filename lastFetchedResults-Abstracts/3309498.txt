The objective of a mixed-criticality system is to integrate multiple functionalities into a common platform for better cost and power efficiency. The existing mixed-criticality scheduling will discard less critical tasks in order to respect the timeliness of the more critical tasks when the computation demand of (some of) the high critical tasks increases. These methods respect the timeliness of the more critical tasks at the expense of the requirements of the less critical tasks, it may have some negative impacts. On one hand, as the less critical tasks may have accessing data, the consistency of these data cannot be preserved if less critical tasks are discarded arbitrarily, and this might result in system failure. On the other hand, as the real execution time of tasks is always less than worst case execution time, and slacks may always exist on multiprocessors. Low-critical tasks should be handled more positive. This paper propose a mixed-criticality scheduling method positively handles the lower critical tasks with two task queues, one of which is for routine tasks and the other is for suspended lower critical tasks. The two kinds of task queues are dispatched with different methods. Simulation experimental results demonstrate the effectiveness and the obvious increasing acceptance ratio of tasks.
