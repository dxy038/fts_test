Change requests are often formulated into concepts or features that a maintainer can understand. One of the main issues faced by a maintainer is to know and locate "where does this program implement feature X". However, these features are implicitly available in the code and scattered elsewhere that make them undoubtedly difficult to manage. A technique called software reconnaissance was originally inspired by industrial maintainers about the need for better ways of locating software features in large systems. We present the experience in using the software reconnaissance technique and tool called RECON2, developed by the university of West Florida. Our objective is to understand how the technique and tool work and to further suggest some enhancements with respect to software understanding strategies.
