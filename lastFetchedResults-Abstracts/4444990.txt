We examine the problem of optimizing the reallocation and execution of divisible load originating in different amounts at the sites of an interconnected set of heterogeneous processors characterized by their load computing speeds and I/O speeds. Each processor imposes, a priori, a hard deadline on its allocated task completion. The objective of load retasking and redistribution, which is implemented at runtime, is twofold: to prescribe feasible load allocations, and to minimize the job execution completion time. We present the necessary and sufficient conditions for the existence of feasible reallocations, and for a feasible reallocation to be optimal in the sense of minimum completion time. When task completions of an optimal reallocation occur before the specified processor deadlines, the deadlines can be advanced by the amount of laxity to obtain the tightest deadlines
