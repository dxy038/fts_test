Agents are software systems aimed at working in dynamic environments. Simulation systems can be used to provide virtual environments for testing agents. The software to be tested, the objective of the simulation study, and the stage of the agent software development influences both: the environmental models used for testing and the mechanisms that synchronize the execution of agents and simulation. A clear distinction between model and simulation layer, and a modular design of the simulation system support the required flexibility. Based on the simulation system James (a Java based agent modeling environment for simulation) and two agent applications we will explore, how interfaces between virtual environments and software agents can be explicitly specified at the modeling level and suitable mechanisms for synchronization might be chosen on demand.
