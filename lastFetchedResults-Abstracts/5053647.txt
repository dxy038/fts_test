This article deals with one of the major problems in component-based software development: the derivation of properties of a component system from given properties of components and rules for their interaction. In the area of measurement, signal processing, and control in embedded systems, components encapsulating signal processing algorithms or signal adaptation algorithms can be modeled by means of a hierarchy of dataflow languages: synchronous (SDF), Boolean controlled (BDF), and dynamic (DDF) dataflow. If the application engineer responsible for component assembly restricts to the use of SDF components, the component system will be computationally analyzable. That is, it can be decided if it is deadlock-free, the required amount of memory can be determined, and a cyclic schedule of component instances can be computed. If the application engineer uses SDF and BDF components only, the component system will still be deterministic. The objective of this paper is to describe a novel concept of a component framework for the aforementioned application area which can automatically determine certain global properties of a component system during component assembly, whenever possible.
