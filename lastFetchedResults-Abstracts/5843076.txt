Summary form only given. This paper presents the current on-going research efforts in which a real-time hyperspectral data compression system developed and demonstrated for a military customer is being ported to an embedded platform fit for deployment onto a tactical platform such as an unmanned aerial vehicle (UAV). The original system consists of a PC host containing multiple PCI boards with SHARC processors interfaced to a state-of-the-art hyperspectral image (HSI) sensor. The resulting embedded implementation will leverage a scalable multiprocessing architecture. Processing nodes based on PowerPC processors with AltiVec technology provide the compute power, while the scalable standard RACEway fabric (ANSI/VITA 5-1994) handles the large interprocessor communication bandwidth. The motivation for this effort is derived from the increased interest in fielding hyperspectral sensors in the intelligence, surveillance, and reconnaissance missions of the military. Historically, there has been significant work performed to develop various data link systems. Data transmission requirements have grown quickly to whatever capacity was available in the data link. With hyperspectral data, this problem becomes even more significant. Sensors such as the EO/IR packages generate large two-dimensional (2-D) data sets. There are many standards developed to compress 2-D data sets, including the ubiquitous JPEG family of routines. With hyperspectral data, there is now a third dimension contained in the collection, that being the spectral components associated with each spatial pixel element. No longer do 2-D approaches apply efficiently. The "data cube" produced by an HSI sensor has correlation components in spatial, temporal, and spectral dimension. The principle component transformation algorithm is one such routine that can work within the data cube environment. The results of this port to a deployable, embedded system architecture will be a scalable product that can be integrated into a larger system that may provide actual data exploitation either on the unmanned platform or on the ground element. Performance characteristics between the two implementations are compared. An attempt to "generalize" the parallelism to increase the scalability to any number of available process- ing elements is a critical objective to increase the utility of this approach. The final product of this work will be the creation of a commercial off-the-shelf (COTS) subsystem that can be leveraged by system developers.
