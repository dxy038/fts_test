Circus is a combination of Z and CSP; its chief distinguishing feature is the inclusion of the ideas of refinement calculus. The main objective is the definition of refinement methods for concurrent programs. The original semantic model for Circus is Hoare and HeÂ´s (1998) unifying theories of programming. An equivalent semantics based on predicate transformers is presented. With this model, a more adequate basis for the formalisation of refinement and verification-condition generation rules is provided. Furthermore, this framework makes it possible to include logical variables and angelic nondeterminism in Circus. The consistency of the relational and predicate transformer models gives us confidence in their accuracy.
