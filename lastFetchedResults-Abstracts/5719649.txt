The development of distributed systems software poses unique challenges due to the diversity of hardware, software, and network protocols in the market today. Achieving interoperability with legacy systems and between systems provided by different vendors has, in the past, required the development of intricate interface specifications or proprietary bridging software. Real time, embedded distributed systems introduce additional performance and resource requirements. Real time systems require the ability to schedule tasks, predict the performance of those tasks, and perhaps most important, predict how the system will react to an overload situation or resource failure. Embedded systems are often characterized by resource constraints, diverse operating systems, and non-TCP/IP transports. Most real time and/or embedded systems share the requirement of reasonably high performance. High performance systems seek the lowest possible communication overhead and streamlined, optimized software layers. The paper discusses how CORBA has evolved to meet all these requirements, and uses ORBexpress CORBA from Objective Interface as a reference implementation of real time, high performance CORBA for embedded developers
