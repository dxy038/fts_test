We investigate a scheduling problem in loosely coupled multiprocessor systems. This problem has been addressed by many researchers because it has a substantial effect on the performance of multiprocessor systems. Previous work considered only one class of tasks to be scheduled. We propose an algorithm to schedule two classes of tasks, indivisible and divisible tasks, among the available processors in the system. The objective is to find the best scheduling that gives a minimum finish time. The divisible class of tasks, considered for the first time in a scheduling algorithm, has important applications in signal-processing, image-processing and Kalman filtering. The proposed algorithm answered many important questions that arise when the two classes of divisible and indivisible tasks are considered. Applications of the algorithm include all operating systems with multiprocessor support, such as the Mach operating system. Although two classes of tasks are considered, the complexity of the algorithm stays in a reasonable order
