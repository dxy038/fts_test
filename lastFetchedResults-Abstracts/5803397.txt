AntNet is an agent based routing algorithm that is influenced from the unsophisticated and individual ant´s emergent behavior. AntNet algorithm does not consider the effect of increasing the total numbers of routing packets (ants) moving inside the network which could contribute to congestion. This could eventually have a negative impact on the overall network performance. Moreover, AntNet addresses the problem of routing not load balancing as AntNet philosophy can lead to network congestion and create bottlenecks. The main objective of this work is modifying the AntNet algorithm to address its above mentioned drawbacks. This work measures the effect of increasing the number of ants on the average packet delay and network throughput; and modifying, accordingly, the ants´ generation rate. Also we introduced a modified AntNet load- aware algorithm that improves AntNet in order to support load balancing. A complete network simulator is developed in C++ in order to simulate and evaluate the AntNet algorithm and the suggested modifications. Results showed that controlling and limiting the total number of routing packets (ants) moving inside the network decreased the average delay per packet and increased the network throughput. The proposed modified load aware algorithm achieves better results in terms of throughput and average queue length and average delay experienced per packet.
