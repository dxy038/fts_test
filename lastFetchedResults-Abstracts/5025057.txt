At NASA and across industry, with multiple release projects, requirement storage is a volatile, dynamic process. The skill with which a project maintains, keeps current, tracks, and traces its set of requirements affects every phase of the project´s software development life cycle-including maintenance. The ability to effectively manage requirements influences, months and/or years before project completion, how, when, and how expensively completion, will take place. The Software Assurance Technology Center (SATC) at NASA Goddard Space Flight Center is working to continually evaluate the requirement activities of a multi billion dollar project. This task requires that the SATC evaluate the project´s tools, specifically the requirement database management tool. The objective of the paper is to identify a major failing in the use of requirement management tools that causes loss of data, loss of data integrity, and loss of tool functionality. It also shows that bringing engineers and database designers together to define tool use is mandatory; and that each discipline´s experience and expertise is required for successful tool implementation. Using experiences from a NASA project, we demonstrate some potential risks when a requirement management tool is incorrectly used, and how this fatal flaw plants the seeds of requirement management destruction and consequent project overruns. This information will benefit any project considering or using requirement management tools
