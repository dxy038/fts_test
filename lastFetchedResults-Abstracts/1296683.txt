This paper considers a parallel-machine scheduling problem with machine maintenance. There are unavailable periods on each of the first k   machines, and the remaining m   − k   machines are always available, where 1 ⩽ k   ⩽ m   is an integer. The objective is to minimize the total completion time of all jobs. We show the classical SPT   algorithm has a worst-case ratio of at most View the MathML source1+m-1m-k when k   < m  . If there is exactly one unavailable period on each of the first k   machines, and the unavailable periods do not overlap, the worst-case ratio of SPT   is at most View the MathML source2+k-1m-1, and no polynomial time approximation algorithm with worst-case ratio less than View the MathML sourcemm-1 can exist when k = m unless P = NP.
