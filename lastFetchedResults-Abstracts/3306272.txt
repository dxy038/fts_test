Interfering jobs problems or multi agents scheduling problems are an emergent topic in the scheduling literature. In this problem two or more sets of jobs are scheduled, each one with its own criterion. We study here the problem occurring when jobs from two sets are scheduled on a single machine. The objective is to minimize the total flowtime of one set, while maintaining the total flowtime of the jobs in the other set lower or equal than a given constant. This problem is known to be NP-hard. We provide some properties and code the solutions according to these properties using a binary codification. We compare this binary codification with the classical permutation codification using a Genetic Algorithm. We have tested small and big instances, and show the advantages up the binary codification.
