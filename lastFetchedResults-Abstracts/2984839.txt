This paper describes a basic EDF scheduler with improvements aiming to reduce temporal faults in soft real time applications. The main objective of the scheduler is to always maintain a valid execution plan for the CPU, where all tasks will meet their deadlines. As task arrivals are not known in advance, scheduling is updated and built online. To make decisions, the scheduler uses the available information, mainly provided by clients when requesting task executions: deadline, importance, WCET of alternative methods, current scheduled tasks, etc. Under overload, less important tasks are removed to make a place for more important ones (graceful degradation). They are kept in a different queue waiting to be re-scheduled if new time conditions make it possible. By simulation experiments, the effects of the different scheduler improvements on faults and result quality are obtained and analysed
