SBASCO provides a new programming model for parallel and distributed numerical applications which exploits the combination of software components and skeletons. This paper presents an extension to both the model and implementation of SBASCO, so that the notion of aspect is applied in conjunction with the original paradigms. The objective is to achieve a higher level of modularity and reuse in parallel scientific codes and applications. Our aspects are managed as components which implement the (sequential or parallel) cross-cutting functionality. Aspects interact with the base code by means of connectors that express the cross-cutting nature of the target concerns. The way in which both aspect weaving and advice code execution are managed is critical for preserving the performance of applications. An implementation of the abstractions for distributed memory parallel systems based on MPI is discussed.
