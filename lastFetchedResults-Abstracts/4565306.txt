Summary form only given. The authors report a case study of data-flow software pipelining, an efficient code-mapping strategy for array operations in loops on a highly pipelined static data-flow processor architecture based on an argument-fetching data-driven principle. The new architecture has the potential of keeping the instruction-processing pipeline full busy as long as the structure of the program can keep enough enabled instructions for concurrent execution-one main objective of data-flow software pipelining proposed in this work
