Two efficient mapping algorithms are presented for scheduling the execution of a robot inverse dynamics computation using a <e1>p</e1>-processor multiprocessor system where <e1>p</e1> is the number of identical processors. An objective function is defined in terms of the sum of the processor finishing time and the interprocessor communication time. A minimax optimization is performed on the objective function to obtain the best mapping. This mapping problem is formulated as a combination of a graph partitioning and scheduling problem; both are known to be NP-complete. Computer simulations were performed to evaluate and verify the performance and the validity of the proposed mapping algorithms. Experiments for computing the inverse dynamics of a six-jointed PUMA-like manipulator based on the Newton-Euler dynamic equations were implemented on an NCUBE/ten hypercube computer to verify the proposed mapping algorithms
