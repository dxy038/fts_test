Awareness of context of a domain is essential when designing a human computer interface. In many domains, such as air traffic control, the technical context is evolving and system development needs to adapt to these changes. This work presents a meta model for comparing models of different contextual detail, within systems and between systems. We have built an example abstract model of the air traffic control domain, starting with an initial model without contextual details followed by a refined model adding organizational, technical and regulatory contexts. Abstract modelling of the domain can increase developersÂ´ understanding of the application domain and allows them to explore the implications of the evolving and varying contexts. The model is described in terms of entities, behaviors, communication between behaviors, events, activities, actions, actors, stakeholders and contexts, first with text and then using Unified Modelling Language, a diagrammatic language. Control stations, like those of air traffic controllers, often contain more than one system and we need to ensure that the controller perceives them as coherent. Models were reverse engineered from two user interfaces with the objective to identify discrepancies in use of concepts, neighborhood between function and data and the representation of contextual information in the controller workstation. The result of a case study shows that the reverse engineered models are useful to find conceptual discrepancies especially within systems, but may be difficult to compare between systems. The study showed that a comparison between the abstract domain model and each of the individual reverse-engineered models is more suitable for detecting discrepancies between systems.
