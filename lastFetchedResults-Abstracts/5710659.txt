This paper presents a new memory access scheduler, called FSCM (Fair Service Curve Memory access scheduler), which targets for the objective that provides the highest system throughput. The main idea of reordering memory access requests based on the service curve is borrowed from the literature of packet-switched networks. Different threads have different QoS (Quality-of-Service) requirements, and FSCM assigns each thread a service curve. The service curve gives great adaptability to FSCM in allocating its bandwidth. We evaluate FSCM using multi-threaded applications, and compare it to three previously proposed memory access schedulers. On a four-core CMP running combinations of workloads with a wide range of memory bandwidth and latency requirements, FSCM improves system performance by 16.7% on average, and provides the best fairness to all of the threads.
