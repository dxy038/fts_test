The development of control-dominated embedded systems can be largely automated by making use of formal models of computation. In some of these models functional objects are not independently activated, triggered by time or external events, as in conventional real-time scheduling models, but each communication between any two functional objects carries an activation signal from the sender to the receiver. This paper presents an application of scheduling theory to reactive real-time transactions (task groups) implementing a formal model of this kind, used in the context of the POLIS toolset: a network of extended finite state machines communicating asynchronously. Task instances are activated in response to internal and/or external events and the objective of the scheduling problem is to avoid the loss of events exchanged by the tasks and to minimize the number of task instances activated in response to external events. The paper presents a schedulability analysis, two priority assignment algorithms, and an experimental part with a dashboard controller example
