As the size of typical industrial strength databases continues to rise, particularly in the arena of the Internet and multimedia servers, the issue of managing data distribution over clusters or `farmsÂ´ to overcome performance and scalability issues is becoming of paramount importance. The general objective is to manage a self-adapting distributed database so as to reliably and consistently provide near optimal performance as perceived by client applications. Such a management system must ultimately be capable of operating over a range of time varying usage profiles and fault scenarios, incorporate considerations for multiple updates and maintenance operations, and be capable of being scaled in a practical fashion to ever larger sized networks and databases. This paper investigates evolutionary computation techniques, comparing a genetic algorithm, simulated annealing, and hillclimbing on a test problem in this field. Major differential algorithm performance is found across two different fitness criteria. Preliminary conclusions are that a genetic algorithm approach seems superior to hillclimbing or annealing when the more realistic (from a quality of service viewpoint) objective function is in force. Further, the genetic algorithm approach displays regions of adequate robustness to parameter variation, which is also critical from a maintained quality of service viewpoint
