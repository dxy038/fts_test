Our research goal is to construct an environment that mechanically supports human intellectual activities through software development with reuse. We propose a model of software development with systematic reuse in which the existing program can be altered to meet the given specification change using the program derivation process from the specification. We consider what kinds of knowledge must be acquired when a specification is changed and how they have to be integrated so well as to implement our method on a computer system. In particular, we focus on the following points in terms of program synthesis. First, a wide spectrum language, Extended IML, defines a framework in which specifications, program and the elaborate derivation process can be expressed formally on a computer system. This forms a basic unit of reusable knowledge for specification change. Second, a reuse process is formulated in which a new requirement changes the efficient specification and its program is altered to meet this requirement correctly. Third, we consider some conditions and a mechanism by which the knowledge can be integrated so as to obtain an objective program automatically, implying that we will yet profit from reusing the knowledge
