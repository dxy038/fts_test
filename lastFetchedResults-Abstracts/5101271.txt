We study a new variant of the graph orientation problem called MAXMINO where the input is an undirected, edge-weighted graph and the objective is to assign a direction to each edge so that the minimum weighted outdegree (taken over all vertices in the resulting directed graph) is maximized. All edge weights are assumed to be positive integers. This problem is closely related to the job scheduling on parallel machines, called the machine covering problem, where its goal is to assign jobs to parallel machines such that each machine is covered as much as possible. First, we prove that MAXMINO is strongly NP-hard and cannot be approximated within a ratio of 2 = &#194;&#191; for constant &#194;&#191; &gt; 0 in polynomial time unless P = NP, even if all edge weights belong to {2}, every vertex has degree at most three, and the input graph is bipartite or planar. Next, we show how to solve MAXMINO exactly in polynomial time for the special case in which all edge weights are equal to 1. This technique gives us a simple polynomial-time w<sub>max</sub>/w<sub>min</sub>- approximation algorithm for MAXMINO where w<sub>max</sub> and w<sub>min</sub> denote the maximum and minimum weights among all the input edges. Furthermore we also observe that this approach yields an exact algorithm for the general case of MAXMINO whose running time is polynomial whenever the number of edges having weight larger than w<sub>min</sub> is at most logarithmic in the number of vertices. Finally, we, show that MAXMINO is solvable in polynomial time if the input is a cactus graph.
