Traditional web service composition is often statically generated using knowledge available at the design time. However, in practice, composed web services must cope with changing environment at run time to maintain the usability of current composition plan. In this paper, we propose a solution for web service composition based on adaptation to avoid the problem of such invalidated running composition plans. In addition, we add another layer of process between adaptation and composition, called substitution, in the system architecture. The objective of the research is to show that adaptation and substitution complement each other, and their integration in the system provides best flexibility and efficiency for web service composition and execution during the design time and running time, respectively.
