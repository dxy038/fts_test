Since 1988, the Software Systems Group of the Boeing Military Airplane division has been demonstrating Ada reimplementations of intelligent applications and building a laboratory simulation environment to evaluate the viability of these Ada implementations. Several critical analysis and translation tools have been identified that can mechanize part of the Lisp-to-Ada reengineering work, to apply various software engineering methodologies and commercial CASE (computer-aided software engineering) environments to the world of AI (artificial intelligence) prototyping, and to gather emerging real-time AI techniques that provide the mechanisms-to redevelop the applications to be more predictable and responsive. The objective of these tools, methodologies, and programming techniques is to continuously streamline the Lisp-to-Ada reengineering environment and process. Ada prototyping is used to understand processes, methods, and tools for reengineering Lisp into Ada and to identify risk reduction practices regarding Ada-based intelligent software design for real-time performance. The initial supporting environment for Lisp reverse engineering has been defined, and principles for Ada forward engineering have been identified
