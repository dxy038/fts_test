The testing of software is still not a favorite topic for graduates and engineers in the industry even some objective facts of effort, used time and rlevance for product quality, shows that testing has a more than proportional relevance in the overall software development lifecycle. The changes of the various paradigms in software development (evolution to new oerating systems and programming languages) and the increasing complexity of functional and nonfunctional requirements as well as shortening the product dvelopment cycles have create another big problem: INTEROPERABILITY and testing of it. The presentation will analyze some typical effects of this general problem in the software industry which is even more critical for areas where applications are mission critical for the users of this applications and it seems that the gap in (interoperability) testing is tried to be compensated by increasing the cycles of deployment of software with even worse resuslts instead of reliable solutions.
