Origin-Destination demand information, namely the O-D matrix, is one of the essential inputs for many studies of operational analysis of transportation networks. Obtaining such a matrix by conventional surveying methods needs a considerable amount of time and consumes a significant portion of studies' budget. Instead, many researchers have tried to develop some methods to solve the OD matrix adjustment problem (ODMAP), that is, how to adjust an outdated (initial) O-D matrix using easily available traffic counts. These methods are known as low-cost surrogates to the conventional methods and some of them have been shown to cope well with the ODMAP. The problem is formulated as a bi-level programming model where the upper level problem resembles an O-D matrix which can reproduce the counts as close as possible, and the lower level problem performs an equilibrium traffic assignment for any given solution. The gradient algorithm is the most used solution method to the ODMAP, but its efficiency for large-scale problems is not well determined. The method requires significant computational effort to calculate the derivatives of the objective function of the upper level problem when the size of the matrix is large. Moreover, the solution of the gradient is shown to be highly sensitive to the percentage of the links of the network that are counted. Our study also shows that the solution of the gradient method could not remain close enough to the structure of the initial matrix. In this paper, the meta-heuristic intelligence of the Particle Swarm Optimization (PSO) is used to develop an alternative solution method for the ODMAP. The proposed method is applied to solve the problem for Tehran metropolis, and the results are compared against those of the gradient one. The results reveal that the gradient is slightly superior to the PSO in the sense of reduction the objective function value, but the PSO obviously outperforms the gradient method when considering the structure of the adjusted matrix and the sum of its elements. Regarding the CPU times, the PSO can solve the problem in shorter time, due to its simplicity, while both methods use the same algorithm for the lower level problem. The results are promising and encourage further investigation to use the PSO for updating old matrices in transportation studies.


