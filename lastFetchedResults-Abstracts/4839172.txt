Event-based communication models provide interesting properties for distributed systems such as asynchronism and type-based selection mechanisms. The Comet middleware we developed proposes such an event-based communication model as foundation. From this canonical model, we show how to build more conventional bidirectional and synchronous interactions with extended features such as implicit type-based multicast or asynchronous operationalization. Furthermore, we demonstrate the use of the lower-level asynchronous model to develop highly flexible distributed services. We illustrate this idea with a publish/subscribe protocol that can be dynamically reconfigured to match various requirements: type-based or content-based filtering semantics, peer-to-peer or mediator-based configurations.
