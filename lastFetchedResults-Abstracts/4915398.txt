An examination is made of the problem of guaranteeing, on a uniprocessor, response times to sporadic tasks with preemption constraints. The preemption constraints arise from the fact that tasks require exclusive access to shared software resources during portions of their computations. The primary objective is to determine conditions under which it is possible to guarantee a response time to each task which is less than or equal to the task´s minimum interexecution request time. An analysis is made of three different characterizations of a task´s resource requirements. It is shown that for restricted patterns of resource usage, there exist synchronization and scheduling disciplines which are optimal for executing these tasks
