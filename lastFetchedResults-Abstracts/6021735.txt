Thin-client based solutions allow users to connect to remote servers and access content that is running on these servers within a virtual PC. With the advent of cloud based solutions, thin-client deployments running on remote Data-centers are increasingly popular. Unfortunately, since the traffic has to traverse through the Internet, issues such as latency, packet drops, and potentially congestion are introduced, which in turn affect the Quality of Experience (QoE) for the user. Our objective is to provide preferential treatment to certain thin-client flows over the rest of the thin-client flows traversing the same intermediate node, based on the application that the user is using at a given point in time. This is not straightforward, as it is not easy to identify what actual application is running inside a given thin client session, given that thin client protocols essentially only send bitmaps of the desktop to the client and in addition are often encrypting traffic. Assuming that some statistical mechanisms for application identification for thin client connections exists, the challenge we address is how to exploit this information for QoE-driven scheduling. We present a scheme that allows the prioritization of thin client flows that are serving delay-sensitive applications, i.e., prioritizing flows based on the specific QoE requirements of the dynamically changing individual applications running within persistent thin client traffic flows. Our solution is essentially a hybrid scheduling scheme that takes into account the dynamically changing delay and bandwidth requirements of inner (i.e., tunneled in the thin client protocol) applications to prioritize flows that are close to an application-dependent QoE threshold. Our evaluation based on a prototype implementation reveals that our algorithm is indeed effective in dynamically prioritizing persistent thin-client flows based on the dynamically changing inner applications running within the flows.
