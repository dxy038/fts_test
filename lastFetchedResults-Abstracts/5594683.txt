As greater numbers of end users run both multimedia applications and traditional desktop applications (word processing, spreadsheets, etc.) on the same distributed system (e.g., an office intranet or the Internet), the issue of how to provide adaptive quality of service (QoS) in a highly dynamic, shared, and heterogeneous resource environment becomes very important. While Java&#8224; is an elegant solution to the heterogeneity problem, it lacks adaptive QoS support, which is critical to multimedia and other real-time applications. Our ERDoS (End-to-End Resource Management of Distributed Systems) project presents solutions to the adaptation problem. We will demonstrate our innovative content-based adaptation algorithm, embedded within the Java Virtual Machine (JVM) using a set of multimedia applications on a laptop computer running Linux. If the underlying infrastructure provides real-time support, it becomes much easier to extend the support to the application layers. However, the underlying infrastructure for most common systems (whether it is an intranetwork, extranetwork or the Internet) is non-real time. The problem is exacerbated because these newer multimedia applications have to co-reside within the same distributed infrastructure with current desktop applications, which are non-real time and have unpredictable resource usage patterns. Therefore, our objective is to provide adaptive QoS support to these new multimedia applications within a best-effort infrastructure. We are not trying to extend Java to support real-time guarantees for applications because of the inherent non-real-time properties of Java (e.g., its dynamic loading and linking, and garbage collection). Instead, our goal is to insert sophisticated multiapplication, multidimensional QoS adaptation algorithms inside the JVM, to enable it to gracefully adapt multimedia applications as system state changes, in a manner that minimizes the adverse visual effect on these applicationsÂ´ users
