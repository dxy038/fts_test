This paper addresses the problem of designing the steady-state behavior of a system composed of a set of repetitive processes competing for access to shared resources. Its objective is to provide a framework allowing to prototype a robust distributed control policy as a function of the characteristics of the component processes and dispatching rules involved. The considered problem resolution consists in finding a schedule with no process waiting for access to the shared resources and wherefore leading to controls not requiring resource conflict resolution. The problem is formulated as a task of prototyping of conditions sufficient for existence of a waiting-free n-process execution. The conditions prototyping is then examined within the framework of logic-algebraic method. The illustrative example of the approach proposed is provided
