In this paper, we propose a method for partitioning a given application program that exceeds resource limits of mobile terminals into two module sets. Only a part of modules of the given application is assigned on a mobile terminal and the rest of modules are running on its proxy server, and that the mobile terminal invokes the modules on the server using remote method invocation. It is desirable that we can minimize the total amount of communication, delay time and power consumption between the mobile terminal and its server (here, we call the total amount as the total cost). In the proposed technique, first, a given Java program is repeatedly simulated on a single machine, and we collect the statistics information to estimate the total cost. Then, we give the resource limitation of the mobile terminal such as the memory size and an objective function that shows what total cost should be minimized. Under those constraints, our tool divides optimized division by using simulated annealing (SA). We have applied our technique to some application programs and examined its usefulness by evaluating their total costs.
