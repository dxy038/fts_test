In this paper we investigate the problem of designing embedded discrete-event controllers over communication networks. It is assumed that there is a path between every pair of processes in the network. In each process certain events are singled out-called the significant events of the process-and the control objective is specified by a prefix-closed language over the alphabet of all significant events. The paper is focused on communication among processes necessary to meet the control objective. As such, process models are left unspecified; it is only required that disabling any of the significant events not block communication among processes. We show that the protocol design for non-coobservable specifications can be reduced to the synthesis of communicating decentralized supervisors. Solutions are proposed for a restricted class of problems where all channels are ideal, and a couple of positive results are stated for the case where channels are unreliable.
