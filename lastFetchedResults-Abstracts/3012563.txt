The job-shop scheduling problem (JSP) is one of the hardest problems (NP-complete problem). In lots of cases, the combination of goals and resources has an exponentially increasing search space, the generation of consistently good scheduling is particularly difficult because we have a very large combinatorial search space and precedence constraints between operations. Genetic algorithms are preferred to exact methods. They are often successfully used to solve JSP and give "good" solutions near the optimal one. Our objective is to investigate the extension of these results to scheduling problems with uncertain demands where the predictive nature of the problem requires the definition of additional criteria other than those which are usually optimized such as makespan, the time of completion of all the jobs, lateness or tardiness, production cost etc. Due to the difficulty to solve this type of scheduling problems (even the usual ones) especially for a large problem size, the list of jobs is split into actual jobs and predicted jobs which are inserted into the actual solutions. The illustrative example shows how the various scheduling solutions for actual jobs given by the genetic algorithm are re-evaluated in order to find the most promising solution taking into account the future jobs.
