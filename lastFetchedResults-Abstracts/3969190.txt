This paper analyzes implementations of automatic code gapping (ACG) in intelligent network service control points (SCPs). The objective is to identify ACG controls that provide high call throughput while protecting the network from overloads. To achieve this we emphasize the need for careful engineering of vendorsÂ´ control implementations (for example, the proper choice and use of internal SCP measurements) within the constraints of present ACG requirements. We use simulation and find that algorithms that use a combination of processor utilization measurements and measurements of excessive response times can yield reasonable call throughput. Shortening the measurement intervals to speed up the rate at which the SCP can change the rate at which traffic arrives to it further improves the call throughput. Finally, making the sizes of the rate changes smaller refines the granularity of the control and leads to better results
