In some multiobjective optimization problems, the search for the optimal solution of each individual objective is much easier than multi-objective optimization. In such a case, it looks a nice idea to search for the single-objective optimal solutions before the execution of multiobjective evolutionary algorithms (MOEAs). In this paper, we examine the effects of including the single-objective optimal solutions in an initial population of MOEAs on their multi-objective search behavior through computational experiments. We use single-machine scheduling problems with two objectives: to minimize the total flow time and the maximum tardiness. The optimal schedules for these two objectives can be easily obtained by sorting the given jobs in ascending order of their processing times and due dates, respectively. Experimental results demonstrate that the inclusion of the optimal solution for each objective (i.e., the inclusion of the two optimal solutions) clearly improves the search ability of NSGA-II. An interesting observation is that its performance is degraded by the inclusion of only the optimal solution for the total flow time.
