Computer software is inherently complex. Whatever the application, the author chooses-for excellent reasons-to put the complexity of the system largely into the software. This is done to reduce hardware complexity, or to reduce hardware costs, or so that they can use standard hardware components, or for flexibility, for ease of update, or for ease of development. Assessment and certification methods have to overcome this complexity if they are to provide a useful basis for determining the fitness for purpose of some software component. Ultimately, as the author shows, dependability is a matter for engineering judgement supported, but no supplanted, by objective assessment
