The authors consider a formal and systematic method to convert a class of nested loop programs to single assignment codes and, when possible, to regular algorithms (RAs) for systolic array implementation. The authors concentrate on the analysis of certain imperative nested loop programs in view of the ultimate objective, which is the (semi)-automatic design of systolic arrays from such initial behavioral specifications. The nested loop programs can be represented by a graph displaying the variable dependences between iterations. Characteristic properties of this dependence graph are given. In terms of this dependence graph, a procedure is described to transform the program into a single assignment program in which each variable takes on a unique value during the execution of the program. The method provides a systematic way to analyze data dependences in imperative nested loop programs. The approach is complementary to those used in parallelizing/vectorizing compilers. Instead of searching for independent iterations or statements (i.e. parallelism), iterations that are strictly dependent on each other are detected
