One of the major applications of implicit surface modeling systems has been the generation of cartoon-like characters. Recently, additional modeling methods have been combined with implicit surfaces to create much more complex models. These methods include constructive solid geometry (CSG), warping, and two-dimensional texture mapping (among others). The BlobTree has been introduced to organize all of these elements into a single structure which allows both local and global applications of each of these techniques in a general and intuitive fashion. The BlobTree lends itself well to rapid and direct specification of complex models, however current implementations of the BlobTree have not been engineered for efficiency, and perform poorly when attempting to render large models. In this work we apply established techniques, such as spatial subdivision and tree optimization, to the BlobTree. The objective is to increase efficiency during rendering without restricting the functionality of the BlobTree as a modeling tool
