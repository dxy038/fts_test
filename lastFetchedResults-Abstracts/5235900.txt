The scheduling problems for real-time systems with multiversion computations are studied. A computation is performance polymorphic if it has been implemented in several versions each with a different performance characteristics like the time needed to produce a result. Given a set of periodic or aperiodic jobs, each with multiple versions, an investigation is made of the scheduling problem which determines the execution time for each job, and a version is selected to optimize the overall system performance objective. The problems are modeled as resource sharing problems. Known techniques for the sharing problem can be used to allocate the time to each job. Several heuristic algorithms are studied for problems which are NP-complete, and their performances are compared
