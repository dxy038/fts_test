User interface software tools are based on architecture models which usually fail to separate the application from the user interface as strictly as needed for application independence. The architecture model proposed in this paper tries to overcome this problem by providing a bidirectional mapping mechanism for interaction objects. Interactions as well as user interface data are mapped to textual messages which can be exchanged between the application and interaction objects on the one hand and between different interaction objects on the other hand. This solution facilitates independent development of application and user interface. In particular the application programmer no longer has to cope with detail of the user interface program code. To show the benefits of the proposed architecture a user interface tool Supporting graphical object editing is discussed
