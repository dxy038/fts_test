In Infrastructure-as-a-Service cloud data centers, services are provided to cloud customers in the form of virtual machines. Cloud customers can place restrictions on these services by specifying affinity and anti-affinity constraints. Load imbalance is one key issue that cloud data centers regularly face when running these services. Load imbalance arises when existing services are stopped either by the cloud customers or in the event of host power cycling. One way to achieve load balance in such situations is to perform load rebalancing. Load rebalancing is a process of migrating services among hosts to ensure uniform resource distribution. By doing load rebalancing, SLA violations due to resource shortages on over-utilized hosts can be mitigated. The benefits of load rebalancing come at the expense of migration cost. The presence of affinity and anti-affinity constraints make the load rebalancing challenging. In this paper, we focus on load rebalancing of services with affinity and anti-affinity constraints by applying a novel genetic algorithm. Our objective function aims at reducing the number of migrations and variation of available resources in the hosts. Experimental results show that our algorithm achieves a good resource balance while being computationally efficient.
