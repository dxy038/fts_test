The transition P-systems performs a computation through transition between two consecutive configurations. A configuration consists in a m-tuple of multisets present at any moment in the existing m regions of the system. Transitions between two configurations are performed by using evolution rules which are in each region of the system in a non-deterministic maximally parallel manner. This paper is part of exhaustive investigation line whose objective is to implement a hardware system that evolves as it makes a transition P-system. To achieve this objective, it has been carried out a division of this generic system in several stages. The first stage was to determine active rules in a determined configuration for the membrane. The second stage is developed by obtaining the part of the system that is in charge of the application of the active rules. To count the number of times that the active rules is applied exist different algorithms. In this paper presents an algorithm with improved aspects: the number of necessary iterations to reach the final values is perfectly defined, and their adaptation to systems with any number of rules is simple
