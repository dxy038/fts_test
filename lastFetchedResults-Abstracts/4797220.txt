Jaca is a software fault injection tool that validates OO applications written in Java. Jaca´s major goal is to inject faults using high-level programming features during runtime by corrupting attribute values, methods parameters or return values. Jaca´s design was based on a set of patterns-the fault injection pattern system. This pattern describes a generic architecture defined from recurrent design aspects present in most fault injection tools. The objective was to reduce tool development time while enhancing qualities such as portability, extensibility, reusability, efficiency and robustness. The paper presents the pattern set and its use in Jaca´s development. An extension of Jaca to consider injection at the assembly level is also presented to show how easy it is to add new features to the tool.
