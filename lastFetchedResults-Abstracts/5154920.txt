This paper presents a dynamic programming (DP) algorithm to calculate robot manipulator kinematics and plan optimized trajectories. The algorithm optimizes desireable cost functions such as absolute accuracy or time of travel. We show that, when necessary, we can accept sub-optimal (higher cost) alternative to our advantage. For example, if an optimal trajectory is blocked by an obstacle, the robot can reach the destination by following a sub-optimal path. We present computer simulations of many diverse applications of DP to robot kinematic problems. DP algorithm requires more computations than conventional techniques, but permits optimization of objective criteria and flexibility in path planning.
