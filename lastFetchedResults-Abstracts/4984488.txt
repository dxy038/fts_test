Detecting and fixing the performance obstacles of software during the early stages of software development process is the main objective of Software Performance Engineering(SPE) activities. SPE is mostly depended on the formal modeling languages due to the fact that these languages enable us to simulate the software and analyze the performance parameters. Various modeling languages such as queuing networks(QN), layered queues (LQ), Petri Nets and Stochastic Process Algebras are suggested for modeling distributed systems. There are several issues that are needed to be addressed when translating software architectural models to a target formal model, which are synchronous and asynchronous invocations, active and reactive objects, multi-threading, object deployment over computational nodes and process (thread) scheduling for resource utilization. In this paper, first we present a one-to-one translation rule set that is used to translate software Sequence and Deployment Diagrams into their corresponding FSP(Finite State Process) model considering the above mentioned issues. The resulting model then is analyzed through discrete event simulation tools such as LTSA from the performance perspective. Second, we have applied our translation rule set on a real world multi-threaded web application to obtain its FSP model. The simulation results are also presented.
