The Software Project Scheduling (SPS) problem relates to the decision of who does what during a software project lifetime. This problem has a capital importance for software companies, where the total budget and human resources involved in software development must be managed optimally in order to end up with a successful project. Companies are mainly concerned with reducing both the duration and the cost of the projects, and these two goals are in conflict with each other. A multi-objective approach is therefore the natural way of facing the SPS problem and multi-objective metaheuristics have been used to solve the problem in the past. Nowadays, software projects faced by the large companies are increasing in size and we need algorithms that are able to deal with the new large instances of the SPS problem. In this paper we analyze the scalability of four multi-objective algorithms when they are applied to the SPS problem using instances of increasing size. The algorithms are a genetic algorithm (NSGA-II), an evolution strategy (PAES), a differential evolution (DEPT) and a firefly algorithm (MO-FA). The results suggest that PAES is the algorithm with the best scalability behaviour.
