This paper describes a framework based on a publish/subscribe paradigm for interprocess communication based on XML messages sent over a TCP/IP connection. The framework manages the exchange of data within the clients of a system and permits the definition of a specific behavior for each client using a finite-state machine approach. Whilst the server-side of the framework is able to receive and dispatch events and data, the client-side of the framework is modeled as a finite-state machine able to perform state transitions after receiving the correct message. This architecture permits the loose-coupling between producers and consumers of data and the bidirectional mapping between the design of the behavior of a system and its implementation.
