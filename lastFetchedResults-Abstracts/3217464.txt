In information theory, the Hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different. It measures the minimum number of substitutions required to change one string into the other, or the number of errors that transformed one string into the other. The process of detecting errors in a sequence of bits is determined by comparing this sequence to a dictionary of encodings, if found then the pattern is correct, otherwise an error has occurred. In order to correct the errors, the original pattern is substituted with the closest pattern in the dictionary, i.e. the pattern with the smallest hamming distance from the original. A code having a minimum Hamming distance d, can typically detect up to d - 1 and correct up to (d - 1)/2 errors in a code word. In this paper we are going to study the possibility to design an encoding scheme by using random patterns in the dictionary that are created by a secure encryption algorithm, and we are going to test the error correction capabilities of our code. For our study, we used a model in which the code words are represented by whole numbers and an error of size r will change the message number by &#177; r. So, for example, a single error in the message x=7 will change the value of x to 8 or 6, and if x=7 is received as y=10 then an error of size 3 has occurred. The study will be as follows: if we have K numbers selected randomly from {1, 2, 3 ... N} where K&lt;;N, what is the expected minimum distance between the numbers that we will get? To reach our objective, we designed a tool that will find the smallest distance between some K selected numbers out of N, and we were able to show theoretically and practically that for any N, there exist K&lt;;N such that the minimum distance between those K selected numbers is definitely going to be 1, and therefore we cannot detect or correct any error.
