System synthesis takes an abstract system-level description as its input and produces a system-on-a-chip (SOC) as its output. Emphasis during synthesis is usually on optimizing one or more objectives such as price, area, performance and power. Testability enhancement of the SOC solution so obtained follows as a postprocessing step to enable the application of precomputed test sequences to each embedded core and observe its responses. Unfortunately, cascading test synthesis to an SOC synthesis framework does not usually preserve the optimality of the solution obtained. The work presented here describes the first method that incorporates finite-state automata (FSA) based symbolic testability analysis within the framework of system synthesis to address the above shortcoming. Unlike many existing SOC test approaches, FSA based testability analysis facilitates low test overheads and test application times without sacrificing the test coverage of the embedded cores. Our experimental work with an existing multi-objective optimization algorithm and a system-level test framework for a number of examples indicate that efficient SOC architectures, which trade off different architectural features such as integrated circuit price, power consumption, area and/or testability costs under real-time constraints, can be easily generated
