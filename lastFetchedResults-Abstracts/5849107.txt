Multi-objective evolutionary algorithms (MOEAs) have features that can be exploited to harness the processing power offered by modern multi-core CPUs. Modern programming languages offer the ability to use threads and processes in order to achieve parallelism that is inherent in multi-core CPUs. In this paper we present our parallel implementation of a MOEA algorithm and its application to the de novo drug design problem. The results indicate that using multiple processes that execute independent tasks of a MOEA, can reduce significantly the execution time required and maintain comparable solution quality thereby achieving improved performance.
