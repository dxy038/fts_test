This paper addresses dynamic reconfiguration of distributed systems that use a publish/subscribe (pub/sub) middleware. The objective of dynamic reconfiguration is to evolve incrementally from one system configuration to another at run-time in order to e.g., ensure the reliability of the system. The correctness notion of a distributed system is introduced that assures that the system parts that interact with entities under reconfiguration do not fail because of reconfiguration. We analyse the OMG specification of pub<sub>systems - DDS (Data Distribution Service for Real-Time Systems) with respect to its support for the correctness preservation during reconfiguration. We notice that the DDS specification defines such an architecture and behaviour of the pub</sub>sub system that automatically preserves correctness. This differentiates the DDS from other middleware technologies that require that the correctness preservation is guaranteed on application level or by reconfiguration manager/controller. We give several examples of automatic correctness preservation supported by the DDS.
