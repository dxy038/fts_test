We examine a timed Petri net (TPN) scheduling problem with a time-feasible reachability tree. Scheduling a TPN includes a sequencing decision and a timing decision of transitions. The sequencing decision problem is equivalent to determining a routing order of a token in a conflict place. Each transition usually fires as soon as possible when its sequence is determined because such an earliest firing policy provides an optimal solution with a regular objective measure. When a TPN is constructed, a token routing sequence or the evolution of the system can be described with marking changes in the model. Therefore, all possible behaviors of the system can be tracked by a reachability tree. However, the tree size is so large for even a small Petri net that it is very difficult to obtain an optimal solution within a reasonable time. Moreover, a reachability tree has many time-infeasible paths that do not indicate the actual firing sequence of transitions because only marking states are considered to generate a node in a tree for an optimal schedule while ignoring the enabled epochs. Therefore, we develop efficient properties to eliminate such time-infeasible paths in a tree based on the earliest firing policy. Then we apply the method to a simple 3&#215;3 flow shop and linear cluster tool scheduling problems, and verify its effectiveness based on the number of searched nodes and the computation times.
