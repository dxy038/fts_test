In OpenFlow enabled networks, traffic flow packets are usually processed in data plane by a set of associated forwarding rules maintained by switches in their local flow tables, which are implemented using Ternary Content Addressable Memory (TCAM). While TCAM supports high-speed parallel lookup operations, it is an expensive hardware with high power consumption. Consequently, each switch can only afford limited TCAM space, which is inefficient and even infeasible to maintain all rules locally. On the other hand, forwarding all packets to the centralized controller will induce large network traffic and heavy processing burden on controller. In this paper, we aim to finding a fine-balanced processing in two modes: applying the local cached rules to packets or forwarding them directly to controller. To this end, a Multi-Flow oriented Packets Scheduling (MFPS) problem is formulated with an objective of minimizing the total cost of TCAM occupation and remote packets processing. This problem is proved NP-hard. Then, we propose online distributed algorithms which run at switches and controller, respectively. Finally, synthetic network traffic trace-driven experiments are conducted. The simulation results show that the proposed algorithms outperform the legacy OpenFlow strategies and approach to the optimal performance.
