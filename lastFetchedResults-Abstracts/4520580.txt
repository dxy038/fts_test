Semantic web service composition is about finding services from a repository that are able to accomplish a specified task if executed. The task is defined in a form of a composition request which contains a set of available input parameters and a set of wanted output parameters. Instead of the parameter values, concepts from an ontology describing their semantics are passed to the composition engine. The parameters of the services in the repository the composer works on are semantically annotated in the same way as the parameters in the request. The composer then finds a sequence of services, called a composition. If the input parameters given in the request are provided, the services of this sequence can subsequently be executed and will finally produce the wanted output parameters. In this paper, three different approaches to semantic web service composition are formally defined and compared with each other: an uninformed search in form of an IDDFS algorithm, a greedy informed search based on heuristic functions, and a multi- objective genetic algorithm.
