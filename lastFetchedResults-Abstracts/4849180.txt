The agent-oriented approach has emerged as a new and powerful paradigm in modern software engineering. This paper analyzes the reactive agent model, exhibiting innovative characteristics of autonomy, goal-direction, reactive capability, concurrency, and interactivity. Contrary to object depictions of attribute and method signatures, reactive agents are described in terms of their behavior. Due to the complex nature inherent to reactive agent behavior, the need for formal specification and design integrity becomes essential. Descartes is an executable specification language, which has historically been applied to provide such design assurance. This paper describes a formal approach to deriving a reactive agent software design represented in the Agent Unified Modeling Language (AUML). The objective is accomplished through extension of the Descartes specification language and application of a transformation into design representation. The addition serves as a method of providing a guarantee of design reliability by way of gap reduction between requirements analysis and design
