TodayÂ´s software development depends greatly on frameworks and libraries. When their APIs evolve, developers must update their programs accordingly. Existing approaches facilitate the upgrading process by generating change -- rules based on various input data, such call dependency, text similarity, software metrics, etc. However, existing approaches do not provide 100% precision and recall because of the limited set of input data that they use to generate change -- rules. For example, an approach only considering text similarity usually discovers less change -- rules then that considering both text similarity and call dependency with similar precision. But adding more input data may increase the complexity of the change -- rule generating algorithms and make them unpractical. We propse MOFAE (Multi-Objective Framework API Evolution) by modeling framework API evolution as multi-objective optimization problem to take more input data into account while generating change -- rules and to control the algorithmic complexity.
