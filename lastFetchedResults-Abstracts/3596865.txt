This paper presents a family of algorithms for producing, from (&#965;<sub>0</sub>, &#965;<sub>1</sub>, ..., &#965;<sub>n-1</sub>), all initial prefixes x<sub>i</sub>=&#965;<sub>0</sub>&#952;&#965;<sub>1 </sub>&#952;&#183;&#183;&#183;&#952;&#965;<sub>i</sub> (i=0, 1, ..., n-1) in parallel in interconnection networks such as the omega network and the hypercube, where &#952; is an associative binary operator. Each algorithm can be embedded in the switches and interconnections of the network, and can be executed in O((log<sub>2 </sub> r+1) log<sub>r</sub> n) time steps provided that the network connecting n processors is constructed by using an r&#215;r switch, and that parallelism within as well as among individual switches is exploited. The objective of these algorithms is to attain a communication pattern that fits the topology of the network. One type of network can be made equivalent to, or can be embedded in, another type of network, so a family of algorithms can be derived from one basic algorithm. In the basic algorithm, every processor p<sub>i</sub> upward multicasts &#965;<sub>i</sub> to processors p<sub>k</sub> (k=i+1, i+2, ..., n - 1). En route to p<sub>i</sub>, &#965;<sub>j</sub> (j=0, 1, ..., i - 1) are combined in the switches to produce the (i - 1)th initial prefix x<sub>i-1</sub> that is received by p<sub>i</sub>, which can then compute the ith initial prefix x<sub>i</sub>=x<sub>i-1</sub>&#952;&#965;<sub>i</sub>
