Grids have emerged as paradigms for the next generation parallel and distributed computing. Computational grid can be defined as large-scale high-performance distributed computing environments that provide access to high-end computational resources. Grid scheduling is the process of scheduling jobs over grid resources. Improving overall system performance with a lower turn around time is an important objective of grid scheduling. In this paper a priority based scheduling algorithm is proposed. In this algorithm a new parameter named "priority" has been taken into consideration. The algorithm classifies the jobs into high, medium and low categories based on their priority. The priority assignment is done by considering the computational power of job and level of parallelism. The value for level of parallelism is assigned based on the amount of parallelism exhibited by the job and the amount of parallelism exhibited by the available resources. Generally, a job, which needs high computational power and exhibits low parallelism is given a high priority. Prioritizing the jobs in this way can improve the performance of computational grids. The effectiveness of our algorithm is evaluated through simulation results and its superiority over other known algorithms is demonstrated
