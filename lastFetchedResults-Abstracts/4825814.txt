We show how to improve the prediction of gross change using neural networks. We select a multiple regression quality model from the principal components of software complexity metrics collected from a large commercial software system at the beginning of the testing phase. Our measure of quality is based on gross change, and is collected at the end of the maintenance phase. This quality measure is attractive for study as it is both objective and easily obtained directly from the source code. Then, we train a neural network with the complete set of principal components. Comparisons of the two models, gathered from eight related software systems, shows that the neural network offers much improved predictive quality over the multiple regression model
