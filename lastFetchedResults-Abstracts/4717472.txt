A core objective for linked data is the seamless mash-up of information from different data sources that serve data in an easy-to-deliver, resilient manner. The focus on the ease of serving data, however, puts signiffcant burden on the consumer of linked open data. In particular, the consumer service must manage (i) data source discovery, (ii) data access, (iii) data source availability and (iv) data model and schema. In theory, querying, i.e. either federated querying of SPARQL 1.1 endpoints or link-traversal-based querying, is supposed to provide a layer of abstraction to facilitate data consumption. In practice, we will analyze and find that such querying is very useful, but using standards such as SPARQL 1.1 is far away from solving use case needs of data integration from linked data. We provide an analysis of the issues encountered when accessing linked open data and present our approach to tackle this problem. The approach includes effective and effcient capabilities for querying and programming against linked data sources indexing data in various ways, querying for objects represented in linked data and allowing for programming with them.
