Service Oriented Architecture (SOA) is an architectural style used to provide services to consumers that promotes loose coupling between services. The scattered and tangled functionalities modeled in an SOA application can be redesigned using Aspect Oriented Programming (AOP). This results in two sets of services, the first set having services for the base functionalities and the other modeling cross-cutting functionalities. During compilation, cross-cutting functionalities in the second set are woven to the functionalities modeled in the first set. By introducing AOP in SOA, the quality attributes such as re-usability, extendibility and maintainability can be improved. The objective of this paper is to perform an empirical investigation by quantitatively measuring the effect of introducing Aspect Orientation (AO) in SOA by developing with multiple versions of a given application. An AO based SOA application (University Automation System) for automating the functionalities of a typical University with multiple versions has been developed as an experimental test bed. An equivalent set of versions without introducing aspectization are also developed in parallel. The values of the AOP metrics are measured for the different versions of University Automation System both aspectized and unaspectized. The measured values show that the quality attributes namely maintainability, reusability and extendibility improve whereas the complexity of the application decreases during the evolution of the case study application.
