In this paper we consider a system that uses computation offloading, where an infrastructure-based cloud server executes jobs on behalf of a set of mobile devices. In this type of system, mobile job completion times include the latency needed for uploading to the cloud server. Since the processed jobs are subject to hard deadline constraints, this can introduce energy unfairness where mobile devices with poor channel conditions do not fully benefit from computation offloading. This unfairness however, can be compensated for, by dynamic scheduling at the cloud server. We first derive an offline scheduler using an integer linear program which uses a min-max energy objective and non-preemptive cloud server scheduling. We then introduce three online scheduling algorithms. The first is referred to as First-Generated-First-Served (FGFS) where jobs that are generated earlier are given priority at the cloud server. A modified version, referred to as &#947;-Ratio Accepted FGFS (&#947;-FGFS) is proposed where acceptance of a job execution partition is subject to an energy threshold test. We also introduce a version of this algorithm, &#947;-Ratio Accepted Earliest Deadline First (&#947;-EDF) which uses earliest deadline first scheduling to test for job partition feasibility. Various performance results are presented which show the improvements in energy fairness possible with the proposed schedulers.
