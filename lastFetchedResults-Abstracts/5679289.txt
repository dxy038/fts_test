Bit variation operators are widely used in evolutionary computation (EC) that adopt a binary representation. Most commonly, one or more randomly selected bits are flipped with some probability. The success of such a variation operator invariably depends on the location and number of bits being varied in the chromosome. Given an objective function and a candidate parent, bit variations in some locations will provide an improvement in fitness, whereas no improvement will result when variations are produced at other locations. Two classes of bit mutation operators are defined and the relationship between the probability of improvement in fitness and the expected improvement obtained is studied. The performance of these mutation operators is compared with those of conventional crossover (one-point, two-point and uniform) and corresponding headless chicken crossover operators. The study was done on a set of four benchmark objective functions. Simulation results indicate that headless chicken crossover operators and number based mutation operators in general, produce higher change in fitness than the other operators. Conventional crossover operators had higher improvement probabilities, as compared to the other operators, but their silent-variation probabilities were also higher. On all the functions, crossover operators and some of the location-based mutation operators had higher improvement probabilities
