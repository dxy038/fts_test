To solve the challenge of hardware/software partitioning and the reuse of legacy system models (Bannow et al., 2004) introduced a module adapter (MA) based approach which is considered in section 2. The described transformation/mapping of functional code into a SystemC model still needs heavy code modifications. Besides the parser that has to be nearly as powerful as a C++ compiler the readability suffers from the necessary changes. This paper introduces an approach which reduces the code modifications to a minimum. The primary objective is to provide a solution to enable an automated application. In this novel approach, code readability and transformation effort are improved significantly by using the powerful operator overloading mechanism of C++. The presented implementation can be used to either realize transparent communication over module barriers, trace simulation data or only for debugging purposes. Some examples demonstrate the applicability and give some incitements for expedient use cases. The presented C++ code can be easily extended by inheritance for custom needs.
