We examine a complex, multi-objective semiconductor manufacturing scheduling problem involving two batch processing steps linked by a timer constraint. This constraint requires that any job completing the first processing step must be started on the succeeding second machine within some allowable time window; otherwise, the job must repeat its processing on the first step. We present a random keys implementation of NSGA-II (nondominated sorting genetic algorithm) for our problem of interest and investigate the efficacy of different batching policies in terms of the number of approximate efficient solutions that are produced by NSGA-II over a wide range of experimental problem instances. Experimental results suggest a full batch policy can produce superior solutions as compared to greedy batching policies under the experimental conditions examined
