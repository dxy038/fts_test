When multiple users execute their streaming applications over a shared Cloud infrastructure, the provider typically captures the Quality of Service (QoS) for each application at a Service Level Agreement (SLA). Such an SLA identifies the cost that a user must pay to achieve the required QoS, and a penalty that must be paid to the user in case the QoS cannot be met. Assuming the maximisation of the revenue as the providerÂ´s objective, then it must decide: (i) which user streams to accept for storage and analysis; (ii) how many (computational / storage) resources to allocate to each stream in order to improve overall revenue and minimise cost. In this paper, we analyse revenue models for in-transit streaming applications, executed over a shared Cloud infrastructure under the presence of faulty computational resources. We propose an architecture that features a token bucket process envelop to accept user streams; and a control loop to enable resource allocation, while minimising operational cost.
