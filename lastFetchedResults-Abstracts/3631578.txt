Concurrency is a fundamental concept in computer science which is concerned with the study of systems involving multiple processes. The order of events in a concurrent system is unpredictable because of the independence of events occurring in the individual processes. Trace theory is a successful model for the execution of concurrent processes which employs congruence classes of words over partially commutative alphabets. These congruence or interchange classes generalize the more familiar notions of strings and type classes. Motivated by recent work in the areas of program profiling and compression of executable code, we consider a rate distortion problem in which the objective is to reproduce a string which is equivalent to the original string. This leads to a generalization of Kolmogorov complexity and a new graph entropy called the interchange entropy. We provide some of the basic properties of the interchange entropy. We also consider some universal compression schemes for this problem and show that for a large collection of dependence alphabets we can asymptotically attain the interchange entropy.
