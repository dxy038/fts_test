An interesting and difficult problem in the area of distributed problem solving is that of detecting the termination of distributed programs soon after their assigned task is over. In a distributed environment, processes of a distributed program communicate only through exchange of messages and no process maintains complete information about the state of other processes. Additional efforts are, therefore, required to detect the situation when the processes of a distributed program complete their assigned task. The problem of detection of such a situation was first brought into prominence by N. Francez (1980). The problem requires taking snapshots over the states of the processes and then testing the termination criterion over these states. So far, reported algorithms can be broadly categorised into classes depending upon the topology employed namely a unidirectional ring, a spanning tree, and an arbitrary network. The authors explore yet another alternative in the form of bidirectional control communication around a ring. This type of communication potentially offers selective advantages of all the earlier approaches and depicts an approach lying between unidirectional communication and communication in all directions.
