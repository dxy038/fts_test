Network protocols are often implemented in software and / or hardware, and, it becomes essential to design and test them in an efficient manner. This paper explores a dual phase approach for developing network protocols: in the first phase protocols are modeled using UML (Unified Modeling Language) as the formalism, and, in the second phase, use of executable specification and prototyping of protocols based on Java is supported. The prototyping of a protocol is useful for further investigations such as verification of protocol properties, test case generation etc. Once the second phase provides a satisfied result, the developers can go ahead in developing and deploying the protocol in the real environment. Yet another objective in this work is to design executable constructs in Java to specify protocols and prototyping them. The protocols designed using this approach ensures sustenance of the models already developed. Illustration of using executable constructs in Java to specify and prototyping of protocols, and comparison with native implementations is presented in this paper.
