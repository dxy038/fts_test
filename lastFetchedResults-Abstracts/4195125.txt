The authors investigate how adequate tools for concurrent programming may improve the development of real-time applications. First, any such application can be decomposed as a set of cooperating processes. Secondly, if adequate architectural support is available, further parallelism of execution can be achieved on critical parts of the program. The model of concurrency, and the granularity of decomposition, which are best suited for meeting either objective, are shown to be different. Then, the problem of automatically decomposing critical sequential parts into parallel tasks is examined. An example is given, to illustrate the advantages of the proposed methodology, and an implementation strategy for its run-time support is outlined
