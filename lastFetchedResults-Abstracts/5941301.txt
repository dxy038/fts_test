This paper presents Safe-ERfair, an efficient resource allocation strategy for handling overloads in real-time ERfair scheduled embedded systems. Each task has an assigned criticality value and consists of a mandatory part and an optional part. The scheduler employs an a priori look-ahead mechanism at the time of arrival of a new job to examine the occurrence of possible overloads during the execution period of the job and decide whether to accept/reject the new job and whether to execute the optional part in case the job is accepted. Execution time revisions are not allowed once the task is scheduled and this criterion is important in a large class of systems where such changes are not permitted. The objective is to maximize processor utilization by maximizing the reward for executing optional parts while not sacrificing the ERfairness timing constraints of the system and ensuring that all tasks are able to execute atleast their mandatory parts.
