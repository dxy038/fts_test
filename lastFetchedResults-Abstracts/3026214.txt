In this paper, we introduced the design and implementation of a general-purpose assembler that can be written and modified to be adaptive for any given assembly language to generate the target machine code and carry out the execution. The system consists of a parsing module and an execution module. The former generates the target machine code from an inputted assembly language code, and the latter simulates the hardware operation of a computer and executes the instructions. Due to its versatility and flexibility, this assembler allows easy modification to reconfigure itself for implementing any given instruction set architecture. As the major objective of this project, the assembler can help students to learn assembly-language programming and develop an in-depth understanding of its close relationship with the instruction set architecture.
