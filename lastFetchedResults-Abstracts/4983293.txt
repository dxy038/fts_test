The optimized compilation of constraint logic programming (CLP) languages can give rise to impressive performance improvements in terms of run time. The authors consider the integration of approximate inference techniques, well known in the field of artificial intelligence (AI), with an appropriate framework for the definition of nonstandard semantics of CLP. This integration turns out to be particularly appropriate for the case of the abstract interpretation of CLP language programs over numeric domains. One notable advantage of this approach is that it closes the frequent gap between the formalization of data-flow analysis in terms of abstract interpretation and the possibility of efficient implementation. With this objective a class of approximate deduction techniques from AI, and a semantic framework general enough to accomodate the corresponding approximate constraint systems are identified
