From the perspective of scheduling the design and development of real-time applications is straightforward. Given the software architecture in terms of a process model and the respective process parameters a variety of methods are available to decide whether the real-time constraints of an application are satisfied or not. However, in practice of application design and development we are unable to follow this straightforward principle. Instead, in the course of a project a lot of pragmatism, experience-based variation and systematic testing finally lead to acceptable solutions. More or less in the last decade those refinement steps have gained scientific interest and emerged towards the so called sensitivity analysis for real-time systems. On one hand we are convinced that sensitivity analysis, as it is applied today, contributes valuable insights into the variation potential of an application-specific software architecture. On the other hand it is obvious that due to the architecture-based approach sensitivity analysis operates at the same level of abstraction as schedulability analysis does. So, both methods neglect lower levels of abstraction which are needed to derive process parameters, first of all execution times and periods. As there already exists a vast stock of methods for the derivation of execution times this paper focusses on the systematic calculation of periods. The approach operates on the abstraction level of programming and follows the objective that programmed actions are responsible for quality criterions in its application environment. To achieve this objective all time-and value-dependent deviations of sensor/actor systems and the computations system have to be formalized to be taken into account.
