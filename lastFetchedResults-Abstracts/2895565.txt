Virtual network embedding is considered an important problem to solve in order to make infrastructure virtualization economically reasonable. The most efficient algorithms proposed so far define link and node mappings as optimal solutions of Integer Programming (IP) problems. They exhibit reasonably good performance only for small problem instance sizes, including few tens of nodes and links per physical substrate, few nodes and links per virtual request and a dozen of virtual requests to handle in parallel. However, we find these instances too small to be of any practical use. To address this scalability issue, we propose VNetMapper, an algorithm to solve the virtual network embedding problem based on an integer program formulation with appropriately selected objective function, variables and the set of constraints tuned to give an optimal performance. We show through simulations that VNetMapper can quickly, within seconds, solve large problem instances, involving physical substrates with hundreds of nodes and thousands of links and batches of hundreds of virtual network requests. By identifying exact properties that make VNetMapper so fast and scalable, we present guidelines for designing scalable integer programs.
