Summary form only given. There is today an increasing diversity of parallel execution supports. Solving a target problem by using a single algorithm is not always efficient on any computational support. We present here a polyalgorithmic approach for selecting the most suitable algorithm among various ones for given problem size and available resources. Our principal objective here is to illustrate such an approach on the well-known matrix multiplication problem which is one of the most important basic numerical kernels. More precisely, we propose a polyalgorithm which uses both advantages of standard and fast algorithms which is able to automatically choose the right and suitable algorithm for computing the matrix multiplication of any dimension on a particular parallel system. We target this approach on homogeneous clusters of PCs while providing some experiments.
