This paper considers the problem of replicating and scheduling periodic tasks in a multiprocessor system, under timing and dependency constraints. The objective is to maximize the probability of successful completion (logically correct execution, within the time constraints) of all the tasks in the system. The authors assume a precedence graph that is general with chain, AND, OR and loop subgraphs. To achieve high probability of successful completion of the tasks in the system, several modules (that constitute the tasks) are chosen for replication and executed, regardless of whether a failure actually occurs or not. The replicated modules are chosen in an optimal way, and are added to the set of the executable tasks only if that increases the probability of successful completion. The failure model of the modules in the system is general and realistic. The allocation scheme assigns the original and the replicated modules to the processing nodes of the system, and determines their starting time as well as the schedule for communication among them. Their results improve upon the work done previously
