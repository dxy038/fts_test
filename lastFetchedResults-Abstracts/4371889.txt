PLNs are neural networks with linear and metric neurons that separate a non-linear input space into several linear regions. The separation is done by LVQ-like metric neurons (Kohonen, 1989). Linear output neurons provide a linear mapping from input to output space. Unlike other neural networks there is a three-dimensional weight matrix between the input, hidden and output layer rather than a two-dimensional weight matrix between the hidden and output layer. For training of PLNs different training strategies like gradient descent or linear regression exist that are combined with a constructive method producing hidden units. The fastest method is an incremental regression with only 2 to 5 cycles of the complete training set. Incremental training means that the network weights are refreshed after each presentation of a pattern. One drawback of this method is the nonsmooth approximation of the objective function, especially for those spots corresponding to the first few patterns of a linear region. One bad effect is an insufficient generalization in this region. Pruning solves this problem. Results are presented. Applications are seen mainly in approximation tasks and especially, in control tasks and system identification
